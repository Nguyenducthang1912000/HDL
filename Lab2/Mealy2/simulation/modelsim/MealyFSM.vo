// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/07/2020 17:04:52"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module NextState (
	CurrentState_i,
	Data_i,
	Data_o);
input 	[1:0] CurrentState_i;
input 	[3:0] Data_i;
output 	[1:0] Data_o;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Mux1~0_combout ;
wire \Mux1~1_combout ;
wire \Mux0~0_combout ;
wire \Mux0~1_combout ;
wire [1:0] \CurrentState_i~combout ;
wire [3:0] \Data_i~combout ;


cycloneii_io \CurrentState_i[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\CurrentState_i~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(CurrentState_i[1]));
// synopsys translate_off
defparam \CurrentState_i[1]~I .input_async_reset = "none";
defparam \CurrentState_i[1]~I .input_power_up = "low";
defparam \CurrentState_i[1]~I .input_register_mode = "none";
defparam \CurrentState_i[1]~I .input_sync_reset = "none";
defparam \CurrentState_i[1]~I .oe_async_reset = "none";
defparam \CurrentState_i[1]~I .oe_power_up = "low";
defparam \CurrentState_i[1]~I .oe_register_mode = "none";
defparam \CurrentState_i[1]~I .oe_sync_reset = "none";
defparam \CurrentState_i[1]~I .operation_mode = "input";
defparam \CurrentState_i[1]~I .output_async_reset = "none";
defparam \CurrentState_i[1]~I .output_power_up = "low";
defparam \CurrentState_i[1]~I .output_register_mode = "none";
defparam \CurrentState_i[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Data_i[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Data_i~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Data_i[0]));
// synopsys translate_off
defparam \Data_i[0]~I .input_async_reset = "none";
defparam \Data_i[0]~I .input_power_up = "low";
defparam \Data_i[0]~I .input_register_mode = "none";
defparam \Data_i[0]~I .input_sync_reset = "none";
defparam \Data_i[0]~I .oe_async_reset = "none";
defparam \Data_i[0]~I .oe_power_up = "low";
defparam \Data_i[0]~I .oe_register_mode = "none";
defparam \Data_i[0]~I .oe_sync_reset = "none";
defparam \Data_i[0]~I .operation_mode = "input";
defparam \Data_i[0]~I .output_async_reset = "none";
defparam \Data_i[0]~I .output_power_up = "low";
defparam \Data_i[0]~I .output_register_mode = "none";
defparam \Data_i[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Data_i[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Data_i~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Data_i[3]));
// synopsys translate_off
defparam \Data_i[3]~I .input_async_reset = "none";
defparam \Data_i[3]~I .input_power_up = "low";
defparam \Data_i[3]~I .input_register_mode = "none";
defparam \Data_i[3]~I .input_sync_reset = "none";
defparam \Data_i[3]~I .oe_async_reset = "none";
defparam \Data_i[3]~I .oe_power_up = "low";
defparam \Data_i[3]~I .oe_register_mode = "none";
defparam \Data_i[3]~I .oe_sync_reset = "none";
defparam \Data_i[3]~I .operation_mode = "input";
defparam \Data_i[3]~I .output_async_reset = "none";
defparam \Data_i[3]~I .output_power_up = "low";
defparam \Data_i[3]~I .output_register_mode = "none";
defparam \Data_i[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \CurrentState_i[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\CurrentState_i~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(CurrentState_i[0]));
// synopsys translate_off
defparam \CurrentState_i[0]~I .input_async_reset = "none";
defparam \CurrentState_i[0]~I .input_power_up = "low";
defparam \CurrentState_i[0]~I .input_register_mode = "none";
defparam \CurrentState_i[0]~I .input_sync_reset = "none";
defparam \CurrentState_i[0]~I .oe_async_reset = "none";
defparam \CurrentState_i[0]~I .oe_power_up = "low";
defparam \CurrentState_i[0]~I .oe_register_mode = "none";
defparam \CurrentState_i[0]~I .oe_sync_reset = "none";
defparam \CurrentState_i[0]~I .operation_mode = "input";
defparam \CurrentState_i[0]~I .output_async_reset = "none";
defparam \CurrentState_i[0]~I .output_power_up = "low";
defparam \CurrentState_i[0]~I .output_register_mode = "none";
defparam \CurrentState_i[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Data_i[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Data_i~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Data_i[1]));
// synopsys translate_off
defparam \Data_i[1]~I .input_async_reset = "none";
defparam \Data_i[1]~I .input_power_up = "low";
defparam \Data_i[1]~I .input_register_mode = "none";
defparam \Data_i[1]~I .input_sync_reset = "none";
defparam \Data_i[1]~I .oe_async_reset = "none";
defparam \Data_i[1]~I .oe_power_up = "low";
defparam \Data_i[1]~I .oe_register_mode = "none";
defparam \Data_i[1]~I .oe_sync_reset = "none";
defparam \Data_i[1]~I .operation_mode = "input";
defparam \Data_i[1]~I .output_async_reset = "none";
defparam \Data_i[1]~I .output_power_up = "low";
defparam \Data_i[1]~I .output_register_mode = "none";
defparam \Data_i[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (!\CurrentState_i~combout [0] & (!\Data_i~combout [1] & (\CurrentState_i~combout [1] $ (!\Data_i~combout [3]))))

	.dataa(\CurrentState_i~combout [1]),
	.datab(\Data_i~combout [3]),
	.datac(\CurrentState_i~combout [0]),
	.datad(\Data_i~combout [1]),
	.cin(gnd),
	.combout(\Mux1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = 16'h0009;
defparam \Mux1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Data_i[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Data_i~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Data_i[2]));
// synopsys translate_off
defparam \Data_i[2]~I .input_async_reset = "none";
defparam \Data_i[2]~I .input_power_up = "low";
defparam \Data_i[2]~I .input_register_mode = "none";
defparam \Data_i[2]~I .input_sync_reset = "none";
defparam \Data_i[2]~I .oe_async_reset = "none";
defparam \Data_i[2]~I .oe_power_up = "low";
defparam \Data_i[2]~I .oe_register_mode = "none";
defparam \Data_i[2]~I .oe_sync_reset = "none";
defparam \Data_i[2]~I .operation_mode = "input";
defparam \Data_i[2]~I .output_async_reset = "none";
defparam \Data_i[2]~I .output_power_up = "low";
defparam \Data_i[2]~I .output_register_mode = "none";
defparam \Data_i[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Mux1~1 (
// Equation(s):
// \Mux1~1_combout  = (\Data_i~combout [0] & (\Mux1~0_combout  & !\Data_i~combout [2]))

	.dataa(\Data_i~combout [0]),
	.datab(\Mux1~0_combout ),
	.datac(vcc),
	.datad(\Data_i~combout [2]),
	.cin(gnd),
	.combout(\Mux1~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~1 .lut_mask = 16'h0088;
defparam \Mux1~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (\CurrentState_i~combout [1] & (!\CurrentState_i~combout [0] & (!\Data_i~combout [1] & \Data_i~combout [3]))) # (!\CurrentState_i~combout [1] & (\CurrentState_i~combout [0] & (\Data_i~combout [1] & !\Data_i~combout [3])))

	.dataa(\CurrentState_i~combout [1]),
	.datab(\CurrentState_i~combout [0]),
	.datac(\Data_i~combout [1]),
	.datad(\Data_i~combout [3]),
	.cin(gnd),
	.combout(\Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = 16'h0240;
defparam \Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux0~1 (
// Equation(s):
// \Mux0~1_combout  = (\Data_i~combout [0] & (\Mux0~0_combout  & !\Data_i~combout [2]))

	.dataa(\Data_i~combout [0]),
	.datab(\Mux0~0_combout ),
	.datac(vcc),
	.datad(\Data_i~combout [2]),
	.cin(gnd),
	.combout(\Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~1 .lut_mask = 16'h0088;
defparam \Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Data_o[0]~I (
	.datain(\Mux1~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Data_o[0]));
// synopsys translate_off
defparam \Data_o[0]~I .input_async_reset = "none";
defparam \Data_o[0]~I .input_power_up = "low";
defparam \Data_o[0]~I .input_register_mode = "none";
defparam \Data_o[0]~I .input_sync_reset = "none";
defparam \Data_o[0]~I .oe_async_reset = "none";
defparam \Data_o[0]~I .oe_power_up = "low";
defparam \Data_o[0]~I .oe_register_mode = "none";
defparam \Data_o[0]~I .oe_sync_reset = "none";
defparam \Data_o[0]~I .operation_mode = "output";
defparam \Data_o[0]~I .output_async_reset = "none";
defparam \Data_o[0]~I .output_power_up = "low";
defparam \Data_o[0]~I .output_register_mode = "none";
defparam \Data_o[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Data_o[1]~I (
	.datain(\Mux0~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Data_o[1]));
// synopsys translate_off
defparam \Data_o[1]~I .input_async_reset = "none";
defparam \Data_o[1]~I .input_power_up = "low";
defparam \Data_o[1]~I .input_register_mode = "none";
defparam \Data_o[1]~I .input_sync_reset = "none";
defparam \Data_o[1]~I .oe_async_reset = "none";
defparam \Data_o[1]~I .oe_power_up = "low";
defparam \Data_o[1]~I .oe_register_mode = "none";
defparam \Data_o[1]~I .oe_sync_reset = "none";
defparam \Data_o[1]~I .operation_mode = "output";
defparam \Data_o[1]~I .output_async_reset = "none";
defparam \Data_o[1]~I .output_power_up = "low";
defparam \Data_o[1]~I .output_register_mode = "none";
defparam \Data_o[1]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
